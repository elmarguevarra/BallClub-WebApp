// <auto-generated />
using System;
using BallClub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BallClub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210918140812_deployTablesToBallClubDb")]
    partial class deployTablesToBallClubDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("BallClub.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PlayerIds")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("DateTime");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("TeamIds")
                        .HasColumnType("longtext");

                    b.HasKey("GameId")
                        .HasName("PK_Games");

                    b.HasIndex("GameId")
                        .HasDatabaseName("Idx_GameTeamId");

                    b.HasIndex("Schedule")
                        .HasDatabaseName("Idx_GameSchedule");

                    b.HasIndex("SeasonId")
                        .HasDatabaseName("Idx_GameSeason");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BallClub.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("Blocks")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Loss")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Rebounds")
                        .HasColumnType("int");

                    b.Property<string>("SocialMediaLinks")
                        .HasColumnType("longtext");

                    b.Property<int>("Steals")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("PlayerId")
                        .HasName("PK_Players");

                    b.HasIndex("FirstName")
                        .HasDatabaseName("Idx_FirstName");

                    b.HasIndex("GameId");

                    b.HasIndex("LastName")
                        .HasDatabaseName("Idx_LastName");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BallClub.Models.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SeasonId")
                        .HasName("PK_Seasons");

                    b.HasIndex("Name")
                        .HasDatabaseName("Idx_SeasonName");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("BallClub.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeamId")
                        .HasName("PK_Teams");

                    b.HasIndex("GameId");

                    b.HasIndex("Name")
                        .HasDatabaseName("Idx_TeamName");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BallClub.Models.Game", b =>
                {
                    b.HasOne("BallClub.Models.Season", null)
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .HasConstraintName("FK_Games_Seasons")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BallClub.Models.Player", b =>
                {
                    b.HasOne("BallClub.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Games_Players")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BallClub.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_Players_Teams")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BallClub.Models.Team", b =>
                {
                    b.HasOne("BallClub.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Games_Teams")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
